name: GHCR
on:
  push:
    branches: [master]
    tags: 'v*'
    paths:
      - '.github/workflows/docker.yml'

env:
  PLATFORMS: linux/amd64 #,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x

jobs:
  tag:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Prepare
        id: prepare
        run: |
          echo ::set-output name=PLATFORMS::${PLATFORMS}
          echo ::set-output name=IMAGE_TAG::${GITHUB_REF#refs/tags/}

      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
      - uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Push :latest & :${{ steps.prepare.outputs.IMAGE_TAG }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ steps.prepare.outputs.PLATFORMS }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            hertzg/tesseract-server:${{ steps.prepare.outputs.IMAGE_TAG }}
            hertzg/tesseract-server:latest
            ghcr.io/hertzg/tesseract-server:${{ steps.prepare.outputs.IMAGE_TAG }}
            ghcr.io/hertzg/tesseract-server:latest
            docker.pkg.github.com/hertzg/tesseract-server:${{ steps.prepare.outputs.IMAGE_TAG }}
            docker.pkg.github.com/hertzg/tesseract-server:latest

  branch:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/')
    steps:
      - name: Prepare
        id: prepare
        run: |
          echo ::set-output name=PLATFORMS::${PLATFORMS}
          if [[ ${GITHUB_REF#refs/heads/} == master ]]; then
            echo ::set-output name=IMAGE_TAG::master
          else
            echo ::set-output name=IMAGE_TAG::git-${GITHUB_REF#refs/heads/}
          fi

      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
      - uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Push :${{ steps.prepare.outputs.IMAGE_TAG }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ steps.prepare.outputs.PLATFORMS }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            hertzg/tesseract-server:${{ steps.prepare.outputs.IMAGE_TAG }}
            ghcr.io/hertzg/tesseract-server:${{ steps.prepare.outputs.IMAGE_TAG }}
            docker.pkg.github.com/hertzg/tesseract-server:${{ steps.prepare.outputs.IMAGE_TAG }}
